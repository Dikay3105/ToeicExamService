// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToeicWeb.ExamService.ExamService.Data;

#nullable disable

namespace ExamService.Migrations
{
    [DbContext(typeof(ExamDbContext))]
    [Migration("20241111072250_initDB")]
    partial class initDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ToeicWeb.ExamService.ExamService.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("QuestionID");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            IsCorrect = false,
                            QuestionID = -1,
                            Text = "He is eating"
                        });
                });

            modelBuilder.Entity("ToeicWeb.ExamService.ExamService.Models.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TestID")
                        .HasColumnType("int");

                    b.Property<int>("Total_Listening")
                        .HasColumnType("int");

                    b.Property<int>("Total_Reading")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TestID");

                    b.ToTable("history", (string)null);
                });

            modelBuilder.Entity("ToeicWeb.ExamService.ExamService.Models.HistoryDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HistoryID")
                        .HasColumnType("int");

                    b.Property<int>("PartID")
                        .HasColumnType("int");

                    b.Property<int>("TotalCorrect")
                        .HasColumnType("int");

                    b.Property<int>("TotalQuestion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HistoryID");

                    b.HasIndex("PartID");

                    b.ToTable("historydetail", (string)null);
                });

            modelBuilder.Entity("ToeicWeb.ExamService.ExamService.Models.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("TestID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("TestID");

                    b.ToTable("Parts");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedAt = new DateTime(2024, 11, 11, 14, 22, 50, 151, DateTimeKind.Local).AddTicks(1595),
                            Description = "null",
                            Name = "Part null",
                            Number = 1,
                            TestID = -1,
                            UpdatedAt = new DateTime(2024, 11, 11, 14, 22, 50, 151, DateTimeKind.Local).AddTicks(1597)
                        });
                });

            modelBuilder.Entity("ToeicWeb.ExamService.ExamService.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnswerCounts")
                        .HasColumnType("int");

                    b.Property<string>("AudioName")
                        .HasColumnType("longtext");

                    b.Property<string>("AudioPath")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImageName")
                        .HasColumnType("longtext");

                    b.Property<string>("ImagePath")
                        .HasColumnType("longtext");

                    b.Property<int>("PartID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PartID");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            AnswerCounts = 4,
                            CreatedAt = new DateTime(2024, 11, 11, 14, 22, 50, 151, DateTimeKind.Local).AddTicks(1615),
                            PartID = -1,
                            Text = "What is he doing?",
                            UpdatedAt = new DateTime(2024, 11, 11, 14, 22, 50, 151, DateTimeKind.Local).AddTicks(1616)
                        });
                });

            modelBuilder.Entity("ToeicWeb.ExamService.ExamService.Models.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Tests");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedAt = new DateTime(2024, 11, 11, 14, 22, 50, 151, DateTimeKind.Local).AddTicks(1480),
                            Description = "null",
                            Difficulty = "Easy",
                            Duration = 60,
                            Name = "Test null",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ToeicWeb.ExamService.ExamService.Models.UserAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HistoryID")
                        .HasColumnType("int");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.Property<int>("SelectedAnswerID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HistoryID");

                    b.HasIndex("QuestionID");

                    b.HasIndex("SelectedAnswerID");

                    b.ToTable("UserAnswers", (string)null);
                });

            modelBuilder.Entity("ToeicWeb.ExamService.ExamService.Models.Answer", b =>
                {
                    b.HasOne("ToeicWeb.ExamService.ExamService.Models.Question", null)
                        .WithMany()
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToeicWeb.ExamService.ExamService.Models.History", b =>
                {
                    b.HasOne("ToeicWeb.ExamService.ExamService.Models.Test", null)
                        .WithMany()
                        .HasForeignKey("TestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToeicWeb.ExamService.ExamService.Models.HistoryDetail", b =>
                {
                    b.HasOne("ToeicWeb.ExamService.ExamService.Models.History", null)
                        .WithMany()
                        .HasForeignKey("HistoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToeicWeb.ExamService.ExamService.Models.Part", null)
                        .WithMany()
                        .HasForeignKey("PartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToeicWeb.ExamService.ExamService.Models.Part", b =>
                {
                    b.HasOne("ToeicWeb.ExamService.ExamService.Models.Test", null)
                        .WithMany()
                        .HasForeignKey("TestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToeicWeb.ExamService.ExamService.Models.Question", b =>
                {
                    b.HasOne("ToeicWeb.ExamService.ExamService.Models.Part", null)
                        .WithMany()
                        .HasForeignKey("PartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToeicWeb.ExamService.ExamService.Models.UserAnswer", b =>
                {
                    b.HasOne("ToeicWeb.ExamService.ExamService.Models.History", null)
                        .WithMany()
                        .HasForeignKey("HistoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToeicWeb.ExamService.ExamService.Models.Question", null)
                        .WithMany()
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToeicWeb.ExamService.ExamService.Models.Answer", null)
                        .WithMany()
                        .HasForeignKey("SelectedAnswerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
